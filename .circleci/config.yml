version: 2.1

jobs:
  build:
    docker:
      - image: circleci/python:3.9
    environment:
      REPO_ROOT: ~/project
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            sudo apt-get update
            sudo apt-get -y install pandoc make
            pandoc --version
      - run:
          name: Verify template file presence
          command: ls -l templates/template.html
      - run:
          name: Verify index.html file presence
          command: ls -l templates/index_template.html
      - run:
          name: Install requires Python packages
          command: |
            pip install --upgrade pip
            pip install -r requirements.txt
      - run:
          name: Building the reveal.js presentation slides
          command: |
            for PROJ in $(ls -d slides/*/); do
              if [ -f $PROJ/config.yml ]; then
                PROJ=$(basename $PROJ)
                make build PROJECT=$PROJ;
              else
                echo "No config.yml in $PROJ. Skipping...";
              fi;
            done
      - persist_to_workspace:
          root: .
          paths:
            - build
  deploy:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Set Git user information
          command: |
            git config --global user.email "kirubel.m.tadesse@gmail.com"
            git config --global user.name "kirubeltadesse"
      - run:
          name: Checkout gh-pages branch and copy files
          command: |
            git fetch origin gh-pages
            git checkout gh-pages
            ls -la
            # Remove all the existing files in the current directory except the build, resources, and .git directory
            find . -path ./build -prune -o -path ./.git -prune -o -path ./resources -prune -o -type f -exec git rm -r {} \;
            # Copy the contents of the build directory to the current directory, but not the build directory itself
            cp -r build/* .
            touch .nojekyll
            # Add all files and directories except the build, and resources directory
            find . -path ./build -prune -o -path ./.git -prune -o -path ./resources -prune -o -type f -exec git add {} \;
      - run:
          name: Deploy to GitHub Pages
          command: |
            if git diff-index --quiet HEAD; then
              echo "No changes to commit"
            else
              git commit -m "Deploy to GitHub Pages"
              git push -f origin gh-pages
            fi

workflows:
  version: 2
  build-deploy:
    jobs:
      - build:
          filters:
            branches:
              only: master
      - deploy:
          requires:
            - build
